{
  "service": {
    "service": "backend-api",
    "serviceObject": {
      "name": "backend-api"
    },
    "provider": {
      "stage": "test",
      "region": "ap-south-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "versionFunctions": false,
      "memorySize": 128,
      "timeout": 5,
      "environment": {
        "COMPLAINTS_TABLE": "complaints_test",
        "SENDGRID_API_KEY": "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",
        "OFFICIERS_TABLE": "officiers_test"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/complaints_test"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/complaints_test/index/officierid-index"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/complaints_test/index/officier_assigned-index"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/officiers_test"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/officiers_test/index/username-index"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/officiers_test/index/pincode-index"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-south-1:*:table/officiers_test/index/search_name-index"
        }
      ],
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "ComplaintUnderscoreformLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-complaint_form"
            }
          },
          "ComplaintUnderscoreupdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-complaint_update"
            }
          },
          "AddUnderscoreofficierLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-add_officier"
            }
          },
          "ListUnderscorecomplaintsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-list_complaints"
            }
          },
          "OfficierUnderscoreloginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-officier_login"
            }
          },
          "ListUnderscoreofficierLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-list_officier"
            }
          },
          "SentimentUnderscoreschedulerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-sentiment_scheduler"
            }
          },
          "OfficiersUnderscorecomplaintUnderscoreschedulerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-officiers_complaint_scheduler"
            }
          },
          "ComplaintsUnderscoreassignedUnderscoreschedulerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-complaints_assigned_scheduler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "test",
                        "backend-api",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-complaint_form:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-complaint_update:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-add_officier:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-list_complaints:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-officier_login:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-list_officier:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-sentiment_scheduler:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-officiers_complaint_scheduler:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-complaints_assigned_scheduler:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-complaint_form:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-complaint_update:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-add_officier:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-list_complaints:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-officier_login:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-list_officier:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-sentiment_scheduler:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-officiers_complaint_scheduler:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-complaints_assigned_scheduler:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][4]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][5]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][6]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:ap-south-1:166341922662:table/complaints_test/stream/2019-03-02T10:08:47.132"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:ap-south-1:166341922662:table/officiers_test/stream/2019-03-02T09:51:45.510"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:ap-south-1:166341922662:table/complaints_test/stream/2019-03-02T10:08:47.132"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "backend-api",
                    "test",
                    "ap-south-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ComplaintUnderscoreformLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-complaint_form",
              "Handler": "complaint_form.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "ComplaintUnderscoreformLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ComplaintUnderscoreupdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-complaint_update",
              "Handler": "complaint_update.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "ComplaintUnderscoreupdateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AddUnderscoreofficierLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-add_officier",
              "Handler": "add_officier.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "AddUnderscoreofficierLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ListUnderscorecomplaintsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-list_complaints",
              "Handler": "list_complaints.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "ListUnderscorecomplaintsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "OfficierUnderscoreloginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-officier_login",
              "Handler": "officier_login.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "OfficierUnderscoreloginLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ListUnderscoreofficierLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-list_officier",
              "Handler": "list_officier.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "ListUnderscoreofficierLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SentimentUnderscoreschedulerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-sentiment_scheduler",
              "Handler": "scheduler/sentiment_scheduler.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "SentimentUnderscoreschedulerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "OfficiersUnderscorecomplaintUnderscoreschedulerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-officiers_complaint_scheduler",
              "Handler": "scheduler/officiers_complaint_scheduler.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "OfficiersUnderscorecomplaintUnderscoreschedulerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ComplaintsUnderscoreassignedUnderscoreschedulerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z/backend-api.zip"
              },
              "FunctionName": "test-complaints_assigned_scheduler",
              "Handler": "scheduler/complaints_assigned_scheduler.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 5,
              "Environment": {
                "Variables": {
                  "COMPLAINTS_TABLE": "complaints_test",
                  "SENDGRID_API_KEY": "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",
                  "OFFICIERS_TABLE": "officiers_test"
                }
              }
            },
            "DependsOn": [
              "ComplaintsUnderscoreassignedUnderscoreschedulerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "test-backend-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceComplaint": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "complaint",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceComplaintCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceComplaint"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceComplaintUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceComplaint"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceComplaintUpdateComplaintidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceComplaintUpdate"
              },
              "PathPart": "{complaintid}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAddOfficier": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdd"
              },
              "PathPart": "officier",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceListComplaints": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceList"
              },
              "PathPart": "complaints",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceListComplaintsOfficieridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceListComplaints"
              },
              "PathPart": "{officierid}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOfficier": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "officier",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOfficierLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOfficier"
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOfficierLoginUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOfficierLogin"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOfficierLoginUsernameVarPasswordVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOfficierLoginUsernameVar"
              },
              "PathPart": "{password}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOfficierList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOfficier"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodComplaintCreateOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceComplaintCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodComplaintUpdateComplaintidVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceComplaintUpdateComplaintidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAddOfficierOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAddOfficier"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodListComplaintsOfficieridVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceListComplaintsOfficieridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOfficierLoginUsernameVarPasswordVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceOfficierLoginUsernameVarPasswordVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOfficierListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceOfficierList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodComplaintCreatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceComplaintCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ComplaintUnderscoreformLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodComplaintUpdateComplaintidVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceComplaintUpdateComplaintidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ComplaintUnderscoreupdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodAddOfficierPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAddOfficier"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AddUnderscoreofficierLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodListComplaintsOfficieridVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceListComplaintsOfficieridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListUnderscorecomplaintsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodOfficierLoginUsernameVarPasswordVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOfficierLoginUsernameVarPasswordVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OfficierUnderscoreloginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodOfficierListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOfficierList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListUnderscoreofficierLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1551605156683": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "test"
            },
            "DependsOn": [
              "ApiGatewayMethodComplaintCreateOptions",
              "ApiGatewayMethodComplaintUpdateComplaintidVarOptions",
              "ApiGatewayMethodAddOfficierOptions",
              "ApiGatewayMethodListComplaintsOfficieridVarOptions",
              "ApiGatewayMethodOfficierLoginUsernameVarPasswordVarOptions",
              "ApiGatewayMethodOfficierListOptions",
              "ApiGatewayMethodComplaintCreatePost",
              "ApiGatewayMethodComplaintUpdateComplaintidVarPut",
              "ApiGatewayMethodAddOfficierPost",
              "ApiGatewayMethodListComplaintsOfficieridVarPost",
              "ApiGatewayMethodOfficierLoginUsernameVarPasswordVarGet",
              "ApiGatewayMethodOfficierListGet"
            ]
          },
          "ComplaintUnderscoreformLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ComplaintUnderscoreformLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ComplaintUnderscoreupdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ComplaintUnderscoreupdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AddUnderscoreofficierLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AddUnderscoreofficierLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListUnderscorecomplaintsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListUnderscorecomplaintsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OfficierUnderscoreloginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OfficierUnderscoreloginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListUnderscoreofficierLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListUnderscoreofficierLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SentimentUnderscoreschedulerEventSourceMappingDynamodbComplaintstest": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:dynamodb:ap-south-1:166341922662:table/complaints_test/stream/2019-03-02T10:08:47.132",
              "FunctionName": {
                "Fn::GetAtt": [
                  "SentimentUnderscoreschedulerLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": "True"
            }
          },
          "OfficiersUnderscorecomplaintUnderscoreschedulerEventSourceMappingDynamodbOfficierstest": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:dynamodb:ap-south-1:166341922662:table/officiers_test/stream/2019-03-02T09:51:45.510",
              "FunctionName": {
                "Fn::GetAtt": [
                  "OfficiersUnderscorecomplaintUnderscoreschedulerLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": "True"
            }
          },
          "ComplaintsUnderscoreassignedUnderscoreschedulerEventSourceMappingDynamodbComplaintstest": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": "IamRoleLambdaExecution",
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:dynamodb:ap-south-1:166341922662:table/complaints_test/stream/2019-03-02T10:08:47.132",
              "FunctionName": {
                "Fn::GetAtt": [
                  "ComplaintsUnderscoreassignedUnderscoreschedulerLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": "True"
            }
          },
          "complaintsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "complaints_test",
              "AttributeDefinitions": [
                {
                  "AttributeName": "complaintid",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "officierid",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "officier_assigned",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "search_name",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "complaintid",
                  "KeyType": "HASH"
                }
              ],
              "SSESpecification": {
                "SSEEnabled": true
              },
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "officierid-index",
                  "KeySchema": [
                    {
                      "AttributeName": "officierid",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "officier_assigned-index",
                  "KeySchema": [
                    {
                      "AttributeName": "officier_assigned",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "search_name-index",
                  "KeySchema": [
                    {
                      "AttributeName": "search_name",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "officiersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "officiers_test",
              "AttributeDefinitions": [
                {
                  "AttributeName": "officierid",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "postingpincode",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "search_name",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "officierid",
                  "KeyType": "HASH"
                }
              ],
              "SSESpecification": {
                "SSEEnabled": true
              },
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "username-index",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "pincode-index",
                  "KeySchema": [
                    {
                      "AttributeName": "postingpincode",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "search_name-index",
                  "KeySchema": [
                    {
                      "AttributeName": "search_name",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.ap-south-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/test"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpackIncludeModules": true,
      "packExternalModulesMaxBuffer": 409600000
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "complaint_form": {
        "handler": "complaint_form.main",
        "name": "test-complaint_form",
        "events": [
          {
            "http": {
              "path": "complaint/create",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "complaint_update": {
        "handler": "complaint_update.main",
        "name": "test-complaint_update",
        "events": [
          {
            "http": {
              "path": "complaint/update/{complaintid}",
              "method": "put",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "add_officier": {
        "handler": "add_officier.main",
        "name": "test-add_officier",
        "events": [
          {
            "http": {
              "path": "add/officier",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "list_complaints": {
        "handler": "list_complaints.main",
        "name": "test-list_complaints",
        "events": [
          {
            "http": {
              "path": "list/complaints/{officierid}",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "officier_login": {
        "handler": "officier_login.main",
        "name": "test-officier_login",
        "events": [
          {
            "http": {
              "path": "officier/login/{username}/{password}",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "list_officier": {
        "handler": "list_officier.main",
        "name": "test-list_officier",
        "events": [
          {
            "http": {
              "path": "officier/list",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "sentiment_scheduler": {
        "handler": "scheduler/sentiment_scheduler.main",
        "name": "test-sentiment_scheduler",
        "events": [
          {
            "stream": "arn:aws:dynamodb:ap-south-1:166341922662:table/complaints_test/stream/2019-03-02T10:08:47.132"
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "officiers_complaint_scheduler": {
        "handler": "scheduler/officiers_complaint_scheduler.main",
        "name": "test-officiers_complaint_scheduler",
        "events": [
          {
            "stream": "arn:aws:dynamodb:ap-south-1:166341922662:table/officiers_test/stream/2019-03-02T09:51:45.510"
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "complaints_assigned_scheduler": {
        "handler": "scheduler/complaints_assigned_scheduler.main",
        "name": "test-complaints_assigned_scheduler",
        "events": [
          {
            "stream": "arn:aws:dynamodb:ap-south-1:166341922662:table/complaints_test/stream/2019-03-02T10:08:47.132"
          }
        ],
        "package": {
          "artifact": ".serverless/backend-api.zip"
        },
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "complaintsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "complaints_test",
            "AttributeDefinitions": [
              {
                "AttributeName": "complaintid",
                "AttributeType": "N"
              },
              {
                "AttributeName": "officierid",
                "AttributeType": "N"
              },
              {
                "AttributeName": "officier_assigned",
                "AttributeType": "N"
              },
              {
                "AttributeName": "search_name",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "complaintid",
                "KeyType": "HASH"
              }
            ],
            "SSESpecification": {
              "SSEEnabled": true
            },
            "BillingMode": "PAY_PER_REQUEST",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "officierid-index",
                "KeySchema": [
                  {
                    "AttributeName": "officierid",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              },
              {
                "IndexName": "officier_assigned-index",
                "KeySchema": [
                  {
                    "AttributeName": "officier_assigned",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              },
              {
                "IndexName": "search_name-index",
                "KeySchema": [
                  {
                    "AttributeName": "search_name",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "officiersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "officiers_test",
            "AttributeDefinitions": [
              {
                "AttributeName": "officierid",
                "AttributeType": "N"
              },
              {
                "AttributeName": "username",
                "AttributeType": "S"
              },
              {
                "AttributeName": "postingpincode",
                "AttributeType": "S"
              },
              {
                "AttributeName": "search_name",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "officierid",
                "KeyType": "HASH"
              }
            ],
            "SSESpecification": {
              "SSEEnabled": true
            },
            "BillingMode": "PAY_PER_REQUEST",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "username-index",
                "KeySchema": [
                  {
                    "AttributeName": "username",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              },
              {
                "IndexName": "pincode-index",
                "KeySchema": [
                  {
                    "AttributeName": "postingpincode",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              },
              {
                "IndexName": "search_name-index",
                "KeySchema": [
                  {
                    "AttributeName": "search_name",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/backend-api/test/1551605155878-2019-03-03T09:25:55.878Z",
    "artifact": ""
  }
}